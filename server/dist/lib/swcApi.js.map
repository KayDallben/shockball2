{"version":3,"sources":["../../src/lib/swcApi.js"],"names":["process","env","FIREBASE_DATABASE_URL","serviceAccount","require","SWC_CLIENT_SECRET","swcSecurity","SWC_CLIENT_ID","SWC_REDIRECT_URI","getPlayerUid","token","axios","get","headers","then","response","catch","swcError","Error","error","message","refreshAccessToken","refreshToken","request","url","method","data","qs","stringify","grant_type","refresh_token","client_id","client_secret","getAccessToken","authCode","code","redirect_uri","access_type"],"mappings":";;;;;;;AACA;;;;AACA;;;;;;AAFA;AAIA,IAAI,CAACA,QAAQC,GAAR,CAAYC,qBAAjB,EAAwC;AACtC,MAAMC,iBAAiBC,QAAQ,qCAAR,CAAvB,CADsC,CACgC;AACvE;;AAED,IAAI,CAACJ,QAAQC,GAAR,CAAYI,iBAAjB,EAAoC;AAClC,MAAMC,cAAcF,QAAQ,gCAAR,CAApB;AACAJ,UAAQC,GAAR,CAAYI,iBAAZ,GAAgCC,YAAYD,iBAA5C;AACAL,UAAQC,GAAR,CAAYM,aAAZ,GAA4BD,YAAYC,aAAxC;AACAP,UAAQC,GAAR,CAAYO,gBAAZ,GAA+BF,YAAYE,gBAA3C;AACD;;AAED,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAOC,gBAAMC,GAAN,CAAU,8DAA8DF,KAAxE,EAA+E;AACpFG,aAAS;AACP,gBAAU;AADH;AAD2E,GAA/E,EAIJC,IAJI,CAIC,oBAAY;AAClB,WAAOC,QAAP;AACD,GANM,EAMJC,KANI,CAME,iBAAS;AAChB,QAAMC,WAAW,IAAIC,KAAJ,CAAUC,MAAMC,OAAhB,CAAjB;AACA,WAAOH,QAAP;AACD,GATM,CAAP;AAUD;;AAED,SAASI,kBAAT,CAA4BC,YAA5B,EAA0C;AACxC,MAAMC,UAAU;AACdC,SAAK,2CADS;AAEdC,YAAQ,MAFM;AAGdC,UAAMC,aAAGC,SAAH,CAAa;AACjBC,kBAAY,eADK;AAEjBC,qBAAeR,YAFE;AAGjBS,iBAAW/B,QAAQC,GAAR,CAAYM,aAHN;AAIjByB,qBAAehC,QAAQC,GAAR,CAAYI;AAJV,KAAb,CAHQ;AASdQ,aAAS;AACP,gBAAU;AADH;AATK,GAAhB;AAaA,SAAO,qBAAMU,OAAN,EAAeT,IAAf,CAAoB,oBAAY;AACrC,WAAOC,QAAP;AACD,GAFM,EAEJC,KAFI,CAEE,iBAAS;AAChB,QAAMC,WAAW,IAAIC,KAAJ,CAAUC,MAAMC,OAAhB,CAAjB;AACA,WAAOH,QAAP;AACD,GALM,CAAP;AAMD;;AAED,SAASgB,cAAT,CAAwBC,QAAxB,EAAkC;AAChC,MAAMX,UAAU;AACdC,SAAK,2CADS;AAEdC,YAAQ,MAFM;AAGdC,UAAMC,aAAGC,SAAH,CAAa;AACjBO,YAAMD,QADW;AAEjBH,iBAAW/B,QAAQC,GAAR,CAAYM,aAFN;AAGjByB,qBAAehC,QAAQC,GAAR,CAAYI,iBAHV;AAIjBwB,kBAAY,oBAJK;AAKjBO,oBAAcpC,QAAQC,GAAR,CAAYO,gBALT;AAMjB6B,mBAAa;AANI,KAAb,CAHQ;AAWdxB,aAAS;AACP,gBAAU;AADH;AAXK,GAAhB;AAeA,SAAO,qBAAMU,OAAN,EAAeT,IAAf,CAAoB,oBAAY;AACrC,WAAOC,QAAP;AACD,GAFM,EAEJC,KAFI,CAEE,iBAAS;AAChB,QAAMC,WAAW,IAAIC,KAAJ,CAAUC,MAAMC,OAAhB,CAAjB;AACA,WAAOH,QAAP;AACD,GALM,CAAP;AAMD;;QAGCR,Y,GAAAA,Y;QACAY,kB,GAAAA,kB;QACAY,c,GAAAA,c","file":"swcApi.js","sourcesContent":["//third party\nimport axios from 'axios'\nimport qs from 'qs'\n\nif (!process.env.FIREBASE_DATABASE_URL) {\n  const serviceAccount = require('../../../dev-firebase-security.json') //eslint-disable-line no-unused-vars\n}\n\nif (!process.env.SWC_CLIENT_SECRET) {\n  const swcSecurity = require('../../../dev-swc-security.json')\n  process.env.SWC_CLIENT_SECRET = swcSecurity.SWC_CLIENT_SECRET\n  process.env.SWC_CLIENT_ID = swcSecurity.SWC_CLIENT_ID\n  process.env.SWC_REDIRECT_URI = swcSecurity.SWC_REDIRECT_URI\n}\n\nfunction getPlayerUid(token) {\n  return axios.get('http://www.swcombine.com/ws/v1.0/character/?access_token=' + token, {\n    headers: {\n      'Accept': 'application/json'\n    }\n  }).then(response => {\n    return response\n  }).catch(error => {\n    const swcError = new Error(error.message)\n    return swcError\n  })\n}\n\nfunction refreshAccessToken(refreshToken) {\n  const request = {\n    url: 'http://www.swcombine.com/ws/oauth2/token/',\n    method: 'POST',\n    data: qs.stringify({\n      grant_type: 'refresh_token',\n      refresh_token: refreshToken,\n      client_id: process.env.SWC_CLIENT_ID,\n      client_secret: process.env.SWC_CLIENT_SECRET\n    }),\n    headers: {\n      'Accept': 'application/json'\n    }\n  }\n  return axios(request).then(response => {\n    return response\n  }).catch(error => {\n    const swcError = new Error(error.message)\n    return swcError\n  })\n}\n\nfunction getAccessToken(authCode) {\n  const request = {\n    url: 'http://www.swcombine.com/ws/oauth2/token/',\n    method: 'POST',\n    data: qs.stringify({\n      code: authCode,\n      client_id: process.env.SWC_CLIENT_ID,\n      client_secret: process.env.SWC_CLIENT_SECRET,\n      grant_type: 'authorization_code',\n      redirect_uri: process.env.SWC_REDIRECT_URI,\n      access_type: 'offline'\n    }),\n    headers: {\n      'Accept': 'application/json'\n    }\n  }\n  return axios(request).then(response => {\n    return response\n  }).catch(error => {\n    const swcError = new Error(error.message)\n    return swcError\n  })\n}\n\nexport {\n  getPlayerUid,\n  refreshAccessToken,\n  getAccessToken\n}"]}