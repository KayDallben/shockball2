{"version":3,"sources":["../../src/lib/swcApi.js"],"names":["process","env","FIREBASE_DATABASE_URL","serviceAccount","require","SWC_CLIENT_SECRET","swcSecurity","SWC_CLIENT_ID","SWC_REDIRECT_URI","getPlayerUid","token","get","headers","then","response","catch","swcError","Error","error","message","refreshAccessToken","refreshToken","console","log","request","url","method","data","stringify","grant_type","refresh_token","client_id","client_secret","getAccessToken","authCode","code","redirect_uri","access_type"],"mappings":";;;;;;;AACA;;;;AACA;;;;;;AAFA;AAIA,IAAI,CAACA,QAAQC,GAAR,CAAYC,qBAAjB,EAAwC;AACtC,MAAMC,iBAAiBC,QAAQ,iCAAR,CAAvB,CADsC,CAC4B;AACnE;;AAED,IAAI,CAACJ,QAAQC,GAAR,CAAYI,iBAAjB,EAAoC;AAClC,MAAMC,cAAcF,QAAQ,4BAAR,CAApB;AACAJ,UAAQC,GAAR,CAAYI,iBAAZ,GAAgCC,YAAYD,iBAA5C;AACAL,UAAQC,GAAR,CAAYM,aAAZ,GAA4BD,YAAYC,aAAxC;AACAP,UAAQC,GAAR,CAAYO,gBAAZ,GAA+BF,YAAYE,gBAA3C;AACD;;AAED,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAO,gBAAMC,GAAN,CAAU,8DAA8DD,KAAxE,EAA+E;AACpFE,aAAS;AACP,gBAAU;AADH;AAD2E,GAA/E,EAIJC,IAJI,CAIC,oBAAY;AAClB,WAAOC,QAAP;AACD,GANM,EAMJC,KANI,CAME,iBAAS;AAChB,QAAMC,WAAW,IAAIC,KAAJ,CAAUC,MAAMC,OAAhB,CAAjB;AACA,WAAOH,QAAP;AACD,GATM,CAAP;AAUD;;AAED,SAASI,kBAAT,CAA4BC,YAA5B,EAA0C;AACxCC,UAAQC,GAAR,CAAY,0DAAZ;AACAD,UAAQC,GAAR,CAAYF,YAAZ;AACA,MAAMG,UAAU;AACdC,SAAK,2CADS;AAEdC,YAAQ,MAFM;AAGdC,UAAM,aAAGC,SAAH,CAAa;AACjBC,kBAAY,eADK;AAEjBC,qBAAeT,YAFE;AAGjBU,iBAAW/B,QAAQC,GAAR,CAAYM,aAHN;AAIjByB,qBAAehC,QAAQC,GAAR,CAAYI;AAJV,KAAb,CAHQ;AASdO,aAAS;AACP,gBAAU;AADH;AATK,GAAhB;AAaA,SAAO,qBAAMY,OAAN,EAAeX,IAAf,CAAoB,oBAAY;AACrC,WAAOC,QAAP;AACD,GAFM,EAEJC,KAFI,CAEE,iBAAS;AAChB,QAAMC,WAAW,IAAIC,KAAJ,CAAUC,MAAMC,OAAhB,CAAjB;AACA,WAAOH,QAAP;AACD,GALM,CAAP;AAMD;;AAED,SAASiB,cAAT,CAAwBC,QAAxB,EAAkC;AAChC,MAAMV,UAAU;AACdC,SAAK,2CADS;AAEdC,YAAQ,MAFM;AAGdC,UAAM,aAAGC,SAAH,CAAa;AACjBO,YAAMD,QADW;AAEjBH,iBAAW/B,QAAQC,GAAR,CAAYM,aAFN;AAGjByB,qBAAehC,QAAQC,GAAR,CAAYI,iBAHV;AAIjBwB,kBAAY,oBAJK;AAKjBO,oBAAcpC,QAAQC,GAAR,CAAYO,gBALT;AAMjB6B,mBAAa;AANI,KAAb,CAHQ;AAWdzB,aAAS;AACP,gBAAU;AADH;AAXK,GAAhB;AAeA,SAAO,qBAAMY,OAAN,EAAeX,IAAf,CAAoB,oBAAY;AACrC,WAAOC,QAAP;AACD,GAFM,EAEJC,KAFI,CAEE,iBAAS;AAChB,QAAMC,WAAW,IAAIC,KAAJ,CAAUC,MAAMC,OAAhB,CAAjB;AACA,WAAOH,QAAP;AACD,GALM,CAAP;AAMD;;QAGCP,Y,GAAAA,Y;QACAW,kB,GAAAA,kB;QACAa,c,GAAAA,c","file":"swcApi.js","sourcesContent":["//third party\r\nimport axios from 'axios'\r\nimport qs from 'qs'\r\n\r\nif (!process.env.FIREBASE_DATABASE_URL) {\r\n  const serviceAccount = require('../../../firebase-security.json') //eslint-disable-line no-unused-vars\r\n}\r\n\r\nif (!process.env.SWC_CLIENT_SECRET) {\r\n  const swcSecurity = require('../../../swc-security.json')\r\n  process.env.SWC_CLIENT_SECRET = swcSecurity.SWC_CLIENT_SECRET\r\n  process.env.SWC_CLIENT_ID = swcSecurity.SWC_CLIENT_ID\r\n  process.env.SWC_REDIRECT_URI = swcSecurity.SWC_REDIRECT_URI\r\n}\r\n\r\nfunction getPlayerUid(token) {\r\n  return axios.get('http://www.swcombine.com/ws/v1.0/character/?access_token=' + token, {\r\n    headers: {\r\n      'Accept': 'application/json'\r\n    }\r\n  }).then(response => {\r\n    return response\r\n  }).catch(error => {\r\n    const swcError = new Error(error.message)\r\n    return swcError\r\n  })\r\n}\r\n\r\nfunction refreshAccessToken(refreshToken) {\r\n  console.log('refresh token calling with is:**************************')\r\n  console.log(refreshToken)\r\n  const request = {\r\n    url: 'http://www.swcombine.com/ws/oauth2/token/',\r\n    method: 'POST',\r\n    data: qs.stringify({\r\n      grant_type: 'refresh_token',\r\n      refresh_token: refreshToken,\r\n      client_id: process.env.SWC_CLIENT_ID,\r\n      client_secret: process.env.SWC_CLIENT_SECRET\r\n    }),\r\n    headers: {\r\n      'Accept': 'application/json'\r\n    }\r\n  }\r\n  return axios(request).then(response => {\r\n    return response\r\n  }).catch(error => {\r\n    const swcError = new Error(error.message)\r\n    return swcError\r\n  })\r\n}\r\n\r\nfunction getAccessToken(authCode) {\r\n  const request = {\r\n    url: 'http://www.swcombine.com/ws/oauth2/token/',\r\n    method: 'POST',\r\n    data: qs.stringify({\r\n      code: authCode,\r\n      client_id: process.env.SWC_CLIENT_ID,\r\n      client_secret: process.env.SWC_CLIENT_SECRET,\r\n      grant_type: 'authorization_code',\r\n      redirect_uri: process.env.SWC_REDIRECT_URI,\r\n      access_type: 'offline'\r\n    }),\r\n    headers: {\r\n      'Accept': 'application/json'\r\n    }\r\n  }\r\n  return axios(request).then(response => {\r\n    return response\r\n  }).catch(error => {\r\n    const swcError = new Error(error.message)\r\n    return swcError\r\n  })\r\n}\r\n\r\nexport {\r\n  getPlayerUid,\r\n  refreshAccessToken,\r\n  getAccessToken\r\n}"]}