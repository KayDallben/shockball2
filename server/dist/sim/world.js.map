{"version":3,"sources":["../../src/sim/world.js"],"names":["util","Util","World","objects","leftPlayers","leftBench","Center","Wing","Guard","Sub","Inactive","rightPlayers","rightBench","object","getType","push","filter","worldObject","shockballPlayerUid","homeGoalSide","leftPlayer","rightPlayer","challenge","rechargeBenchPlayerEnergy","rotateIfEnergyThreshold","update","allLeftPlayers","concat","allRightPlayers","player","playerEnduranceModifier","endurance","energy","defaultThreshold","trySwapLinePlayer","gameTime","playerToSub","getNextRoleFromBench","role","subOutPlayer","subInPlayer","record","add","goalProximity","side","register","removeFromBench","addToField","playerDeregister","removeFromField","addToBench","benchPlayer","fieldedPlayer","ensureRole","playerRole","currentPlayer","undefined","sidePlayers","doesCenterExist","find","wings","doesGuardExist","length","oldRightPlayers","oldRightBench","oldLeftPlayers","oldLeftBench"],"mappings":"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","file":"world.js","sourcesContent":["import Util from './util'\nimport Player from './player'\n\nconst util = new Util()\n\nexport default class World {\n  constructor() {\n   this.objects = []\n   this.leftPlayers = []\n   this.leftBench = {\n     Center: [],\n     Wing: [],\n     Guard: [],\n     Sub: [],\n     Inactive: []\n   }\n   this.rightPlayers = []\n   this.rightBench = {\n    Center: [],\n    Wing: [],\n    Guard: [],\n    Sub: [],\n    Inactive: []\n   }\n  }\n\n  register(object) {\n    if (util.getType(object) === '[object Object]') {\n      this.objects.push(object)\n    }\n  }\n\n  playerDeregister(object) {\n    this.objects = this.objects.filter(function(worldObject) {\n      return worldObject.shockballPlayerUid !== object.shockballPlayerUid;\n    })\n    if (object.homeGoalSide === 'left') {\n      this.leftPlayers = this.leftPlayers.filter(function(leftPlayer) {\n        return leftPlayer.shockballPlayerUid !== object.shockballPlayerUid\n      })\n    } else {\n      this.rightPlayers = this.rightPlayers.filter(function(rightPlayer) {\n        return rightPlayer.shockballPlayerUid !== object.shockballPlayerUid\n      })\n    }\n  }\n\n  update(challenge) {\n    this.rechargeBenchPlayerEnergy()\n    this.rotateIfEnergyThreshold(challenge)\n    for (let worldObject of this.objects) {\n      if (worldObject.update) {\n        worldObject.update()\n      }\n    }\n  }\n\n  rechargeBenchPlayerEnergy() {\n    const allLeftPlayers = [].concat(this.leftBench.Center, this.leftBench.Wing, this.leftBench.Guard, this.leftBench.Sub, this.leftBench.Inactive)\n    const allRightPlayers = [].concat(this.rightBench.Center, this.rightBench.Wing, this.rightBench.Guard, this.rightBench.Sub, this.rightBench.Inactive)\n    for (let player of allLeftPlayers) {\n      const playerEnduranceModifier = player.endurance / 100\n      if (player.energy + (10 * playerEnduranceModifier) < 100) {\n        player.energy = player.energy + (10 * playerEnduranceModifier)\n      } else {\n        player.energy = 100\n      }\n    }\n    for (let player of allRightPlayers) {\n      const playerEnduranceModifier = player.endurance / 100\n      if (player.energy + (10 * playerEnduranceModifier) < 100) {\n        player.energy = player.energy + (10 * playerEnduranceModifier)\n      } else {\n        player.energy = 100\n      }\n    }\n  }\n\n  rotateIfEnergyThreshold(challenge) {\n    const defaultThreshold = 10\n    for (let player of this.leftPlayers) {\n      if (player.energy <= defaultThreshold) {\n        this.trySwapLinePlayer(player, challenge, this.objects[1].gameTime)\n      }\n    }\n    for (let player of this.rightPlayers) {\n      if (player.energy <= defaultThreshold) {\n        this.trySwapLinePlayer(player, challenge, this.objects[1].gameTime)\n      }\n    }\n  }\n\n  trySwapLinePlayer(player, challenge, gameTime) {\n    const playerToSub = this.getNextRoleFromBench(player.homeGoalSide, player.role)\n    if (playerToSub) {\n      //we only sub if there is a player on the bench to sub in!\n      this.subOutPlayer(player)\n      this.subInPlayer(playerToSub)\n      challenge.record.add(player, 'player rotation', gameTime, this.objects[2].goalProximity)\n    }\n  }\n\n  getNextRoleFromBench(side, role) {\n    if (side === 'left') {\n      if (this.leftBench[role][0]) {\n        return this.leftBench[role][0]\n      }\n    } else {\n      if (this.rightBench[role][0]) {\n        return this.rightBench[role][0]\n      }\n    }\n  }\n\n  subInPlayer(player) {\n    this.register(player)\n    if (player.homeGoalSide === 'left') {\n      this.removeFromBench('left', player)\n      this.addToField('left', player)\n    } else {\n      this.removeFromBench('right', player)\n      this.addToField('right', player)\n    }\n  }\n\n  subOutPlayer(player) {\n    this.playerDeregister(player)\n    if (player.homeGoalSide === 'left') {\n      this.removeFromField('left', player)\n      this.addToBench('left', player)\n    } else {\n      this.removeFromField('right', player) \n      this.addToBench('right', player)\n    }\n  }\n\n  removeFromBench(side, player) {\n    if (side === 'left') {\n      this.leftBench[player.role] = this.leftBench[player.role].filter((benchPlayer) => {\n        return benchPlayer.shockballPlayerUid !== player.shockballPlayerUid\n      })\n    } else {\n      this.rightBench[player.role] = this.rightBench[player.role].filter((benchPlayer) => {\n        return benchPlayer.shockballPlayerUid !== player.shockballPlayerUid\n      })\n    }\n  }\n\n  removeFromField(side, player) {\n    if (side === 'left') {\n      this.leftPlayers = this.leftPlayers.filter((fieldedPlayer) => {\n        return fieldedPlayer.shockballPlayerUid !== player.shockballPlayerUid\n      })\n    } else {\n      this.rightPlayers = this.rightPlayers.filter((fieldedPlayer) => {\n        return fieldedPlayer.shockballPlayerUid !== player.shockballPlayerUid\n      })\n    }\n  }\n\n  addToField(side, player) {\n    player.role = this.ensureRole(side, player)\n    if (side === 'left') {\n      this.leftPlayers.push(player)\n    } else {\n      this.rightPlayers.push(player)\n    }\n  }\n\n  addToBench(side, player) {\n    const playerRole = player.role ? player.role : 'Inactive'\n    if (side === 'left') {\n      this.leftBench[playerRole].push(player)\n    } else {\n      this.rightBench[playerRole].push(player)\n    }\n  }\n\n  ensureRole(side, currentPlayer) {\n    let playerRole = currentPlayer.role\n    if (playerRole === undefined) {\n      const sidePlayers = side + 'Players'\n      const doesCenterExist = this[sidePlayers].find((player) => { return player.role === 'Center' })\n      const wings = this[sidePlayers].filter((player) => { return player.role === 'Wing' })\n      const doesGuardExist = this[sidePlayers].find((player) => { return player.role === 'Guard' })\n      if (!doesCenterExist) {\n        playerRole = 'Center'\n      } else if (!doesGuardExist) {\n        playerRole = 'Guard'\n      } else if (wings.length < 2) {\n        playerRole = 'Wing'\n      }\n    }\n    return playerRole\n  }\n\n  switchSides() {\n    const oldRightPlayers = this.rightPlayers\n    const oldRightBench = this.rightBench\n    const oldLeftPlayers = this.leftPlayers\n    const oldLeftBench = this.leftBench\n\n    this.rightPlayers = oldLeftPlayers\n    this.rightBench = oldLeftBench\n    this.leftPlayers = oldRightPlayers\n    this.leftBench = oldRightBench\n  }\n\n}"]}