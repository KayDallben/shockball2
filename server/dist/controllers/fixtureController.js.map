{"version":3,"sources":["../../src/controllers/fixtureController.js"],"names":["FixtureController","db","logger","fixtures","collection","req","res","validation","validate","params","listParams","error","where","get","then","snapshot","forEach","doc","push","data","length","status","send","name","message"],"mappings":";;;;;;qjBAAA;;;AAGA;;;AAFA;;;;AAGA;;;;;;;;;;IAEMA,iB;AAEJ,6BAAYC,EAAZ,EAAgBC,MAAhB,EAAwB;AAAA;;AACtB,SAAKC,QAAL,GAAgBF,GAAGG,UAAH,CAAc,UAAd,CAAhB;AACA,SAAKF,MAAL,GAAcA,MAAd;AACD;;;;;0FAEUG,G,EAAKC,G;;;;;;AACRC,0B,GAAa,cAAIC,QAAJ,CAAaH,IAAII,MAAjB,EAAyB,kBAAcC,UAAvC,C;;sBACfH,WAAWI,KAAX,KAAqB,I;;;;;;;uBAEf,KAAKR,QAAL,CAAcS,KAAd,CAAoB,QAApB,EAA8B,IAA9B,EAAoC,GAApC,EAAyCC,GAAzC,GAA+CC,IAA/C,CAAoD,UAACC,QAAD,EAAc;AACpE,sBAAIZ,WAAW,EAAf;AACAY,2BAASC,OAAT,CAAiB,UAACC,GAAD,EAAS;AACtBd,6BAASe,IAAT,CAAcD,IAAIE,IAAJ,EAAd;AACH,mBAFD;AAGA,sBAAIhB,SAASiB,MAAT,GAAkB,CAAC,CAAvB,EAA0B;AACtBd,wBAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBnB,QAArB;AACH,mBAFD,MAEO;AACH,0BAAM;AACFoB,4BAAM,iBADJ;AAEFC,+BAAS;AAFP,qBAAN;AAIH;AACJ,iBAbK,C;;;;;;;;;;AAeN,qBAAKtB,MAAL,CAAYS,KAAZ;AACAL,oBAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;;;;;;;AAGF,qBAAKpB,MAAL,CAAYS,KAAZ,CAAkB,2BAA2BJ,WAAWI,KAAxD;AACAL,oBAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBf,WAAWI,KAAhC;;;;;;;;;;;;;;;;;;;;;kBAMSX,iB","file":"fixtureController.js","sourcesContent":["//third party\r\nimport Joi from 'joi'\r\n\r\n//internal\r\nimport FixtureSchema from '../models/Fixture.js'\r\n\r\nclass FixtureController {\r\n\r\n  constructor(db, logger) {\r\n    this.fixtures = db.collection('fixtures')\r\n    this.logger = logger\r\n  }\r\n\r\n  async list(req, res) {\r\n    const validation = Joi.validate(req.params, FixtureSchema.listParams)\r\n    if (validation.error === null) {\r\n      try {\r\n        await this.fixtures.where('season', '==', '1').get().then((snapshot) => {\r\n            let fixtures = []\r\n            snapshot.forEach((doc) => {\r\n                fixtures.push(doc.data())\r\n            })\r\n            if (fixtures.length > -1) {\r\n                res.status(200).send(fixtures)\r\n            } else {\r\n                throw {\r\n                    name: 'NoFixturesExist',\r\n                    message: \"There were no fixtures found in the database for this query!\"\r\n                }\r\n            }\r\n        })\r\n      } catch (error) {\r\n        this.logger.error(error)\r\n        res.status(400).send(error)\r\n      }\r\n    } else {\r\n      this.logger.error('Joi validation error: ' + validation.error)\r\n      res.status(400).send(validation.error)\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default FixtureController\r\n"]}