{"version":3,"sources":["../../src/controllers/contractController.js"],"names":["admin","FieldValue","firestore","ContractController","db","logger","contracts","collection","accounts","req","res","validation","validate","query","listParams","error","where","queryProp","queryVal","get","then","snapshot","forEach","doc","push","data","status","send","params","listOneParams","id","body","create","updateSet","teamUid","teamAccount","availableBudget","purchasePrice","add","newContract","update","contractUid","created","serverTimestamp","lastModified","doc2","savedContract","updateTeamAccount","contract","activityType","playerName","timestamp","amount"],"mappings":"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","file":"contractController.js","sourcesContent":["//third party\r\nimport Joi from 'joi'\r\nimport * as admin from 'firebase-admin'\r\n\r\n//internal\r\nimport ContractSchema from '../models/Contract.js'\r\nconst FieldValue = admin.firestore.FieldValue\r\n\r\nclass ContractController {\r\n\r\n  constructor(db, logger) {\r\n    this.contracts = db.collection('contracts')\r\n    this.accounts = db.collection('accounts')\r\n    this.logger = logger\r\n  }\r\n\r\n  async list(req, res) {\r\n    const validation = Joi.validate(req.query, ContractSchema.listParams)\r\n    if (validation.error === null) {\r\n      try {\r\n        await this.contracts.where(req.query.queryProp, '==', req.query.queryVal).get().then((snapshot) => {\r\n          let contracts = []\r\n          snapshot.forEach((doc) => {\r\n            contracts.push(doc.data())\r\n          })\r\n          res.status(200).send(contracts)\r\n        })\r\n      } catch (error) {\r\n        this.logger.error(error)\r\n        res.status(400).send(error)\r\n      }\r\n    } else {\r\n      this.logger.error('Joi validation error: ' + validation.error)\r\n      res.status(400).send(validation.error)\r\n    }\r\n  }\r\n\r\n  async listOne(req, res) {\r\n    const validation = Joi.validate(req.params, ContractSchema.listOneParams)\r\n    if (validation.error === null) {\r\n      try {\r\n        await this.contracts.doc(req.params.id).get().then((doc) => {\r\n          res.status(200).send(doc.data())\r\n        })\r\n      } catch (error) {\r\n        this.logger.error(error)\r\n        res.status(400).send(error)\r\n      }\r\n    } else {\r\n      this.logger.error('Joi validation error: ' + validation.error)\r\n      res.status(400).send(validation.error)\r\n    }\r\n  }\r\n\r\n  async create(req, res) {\r\n    const validation = Joi.validate(req.body, ContractSchema.create)\r\n    if (validation.error === null) {\r\n      try {\r\n        const updateSet = req.body\r\n        await this.accounts.doc(req.body.teamUid).get().then(async (doc) => {\r\n          const teamAccount = doc.data()\r\n          if (teamAccount.availableBudget - req.body.purchasePrice < 0) {\r\n            res.status(400).send('Cannot spend more than availble team budget!')\r\n            return\r\n          } else {\r\n            const newContract = await this.contracts.add(updateSet)\r\n            await newContract.update({\r\n              contractUid: newContract.id,\r\n              created: FieldValue.serverTimestamp(),\r\n              lastModified: FieldValue.serverTimestamp(),\r\n            })\r\n            await this.contracts.doc(newContract.id).get().then(async (doc2) => {\r\n              const savedContract = doc2.data()\r\n              await this.updateTeamAccount(savedContract, teamAccount)\r\n              res.status(201).send(savedContract)\r\n            })\r\n          }\r\n        })\r\n      } catch (error) {\r\n        this.logger.error(error)\r\n        res.status(400).send(error)\r\n      }\r\n    } else {\r\n      this.logger.error('Joi validation error: ' + validation.error)\r\n      res.status(400).send(validation.error)\r\n    }\r\n  }\r\n\r\n  async updateTeamAccount(contract, teamAccount) {\r\n    await this.accounts.doc(contract.teamUid).collection('transactions').add({\r\n      activityType: `Player contract bid sent to ${contract.playerName}`,\r\n      timestamp: FieldValue.serverTimestamp(),\r\n      amount: contract.purchasePrice\r\n    })\r\n    await this.accounts.doc(contract.teamUid).update({\r\n      availableBudget: teamAccount.availableBudget - contract.purchasePrice\r\n    })\r\n  }\r\n}\r\n\r\nexport default ContractController"]}