{"version":3,"sources":["../../src/controllers/teamController.js"],"names":["TeamController","db","logger","teams","collection","req","res","validation","validate","params","listParams","error","get","then","snapshot","forEach","doc","push","data","length","status","send","name","message","listOneParams","id"],"mappings":";;;;;;qjBAAA;;;AAGA;;;AAFA;;;;AAGA;;;;;;;;;;IAEMA,c;AAEJ,0BAAYC,EAAZ,EAAgBC,MAAhB,EAAwB;AAAA;;AACtB,SAAKC,KAAL,GAAaF,GAAGG,UAAH,CAAc,OAAd,CAAb;AACA,SAAKF,MAAL,GAAcA,MAAd;AACD;;;;;0FAEUG,G,EAAKC,G;;;;;;AACRC,0B,GAAa,cAAIC,QAAJ,CAAaH,IAAII,MAAjB,EAAyB,eAAWC,UAApC,C;;sBACfH,WAAWI,KAAX,KAAqB,I;;;;;;;uBAEf,KAAKR,KAAL,CAAWS,GAAX,GAAiBC,IAAjB,CAAsB,UAACC,QAAD,EAAc;AACxC,sBAAIX,QAAQ,EAAZ;AACAW,2BAASC,OAAT,CAAiB,UAACC,GAAD,EAAS;AACxBb,0BAAMc,IAAN,CAAWD,IAAIE,IAAJ,EAAX;AACD,mBAFD;AAGA,sBAAIf,MAAMgB,MAAN,GAAe,CAAC,CAApB,EAAuB;AACrBb,wBAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBlB,KAArB;AACD,mBAFD,MAEO;AACL,0BAAM;AACJmB,4BAAM,cADF;AAEJC,+BAAS;AAFL,qBAAN;AAID;AACF,iBAbK,C;;;;;;;;;;AAeN,qBAAKrB,MAAL,CAAYS,KAAZ;AACAL,oBAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;;;;;;;AAGF,qBAAKnB,MAAL,CAAYS,KAAZ,CAAkB,2BAA2BJ,WAAWI,KAAxD;AACAL,oBAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBd,WAAWI,KAAhC;;;;;;;;;;;;;;;;;;;4FAIUN,G,EAAKC,G;;;;;;AACXC,0B,GAAa,cAAIC,QAAJ,CAAaH,IAAII,MAAjB,EAAyB,eAAWe,aAApC,C;;sBACfjB,WAAWI,KAAX,KAAqB,I;;;;;;;uBAEf,KAAKR,KAAL,CAAWa,GAAX,CAAeX,IAAII,MAAJ,CAAWgB,EAA1B,EAA8Bb,GAA9B,GAAoCC,IAApC,CAAyC,UAACG,GAAD,EAAS;AACtDV,sBAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,IAAIE,IAAJ,EAArB;AACD,iBAFK,C;;;;;;;;;;AAIN,qBAAKhB,MAAL,CAAYS,KAAZ;AACAL,oBAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;;;;;;;AAGF,qBAAKnB,MAAL,CAAYS,KAAZ,CAAkB,2BAA2BJ,WAAWI,KAAxD;AACAL,oBAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBd,WAAWI,KAAhC;;;;;;;;;;;;;;;;;;;;;kBAMSX,c","file":"teamController.js","sourcesContent":["//third party\r\nimport Joi from 'joi'\r\n\r\n//internal\r\nimport TeamSchema from '../models/Team.js'\r\n\r\nclass TeamController {\r\n\r\n  constructor(db, logger) {\r\n    this.teams = db.collection('teams')\r\n    this.logger = logger\r\n  }\r\n\r\n  async list(req, res) {\r\n    const validation = Joi.validate(req.params, TeamSchema.listParams)\r\n    if (validation.error === null) {\r\n      try {\r\n        await this.teams.get().then((snapshot) => {\r\n          let teams = []\r\n          snapshot.forEach((doc) => {\r\n            teams.push(doc.data())\r\n          })\r\n          if (teams.length > -1) {\r\n            res.status(200).send(teams)\r\n          } else {\r\n            throw {\r\n              name: 'NoTeamsExist',\r\n              message: 'There were no teams found in the database for this query!'\r\n            }\r\n          }\r\n        })\r\n      } catch (error) {\r\n        this.logger.error(error)\r\n        res.status(400).send(error)\r\n      }\r\n    } else {\r\n      this.logger.error('Joi validation error: ' + validation.error)\r\n      res.status(400).send(validation.error)\r\n    }\r\n  }\r\n\r\n  async listOne(req, res) {\r\n    const validation = Joi.validate(req.params, TeamSchema.listOneParams)\r\n    if (validation.error === null) {\r\n      try {\r\n        await this.teams.doc(req.params.id).get().then((doc) => {\r\n          res.status(200).send(doc.data())\r\n        })\r\n      } catch (error) {\r\n        this.logger.error(error)\r\n        res.status(400).send(error)\r\n      }\r\n    } else {\r\n      this.logger.error('Joi validation error: ' + validation.error)\r\n      res.status(400).send(validation.error)\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default TeamController\r\n"]}