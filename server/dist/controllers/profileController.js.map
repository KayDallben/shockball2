{"version":3,"sources":["../../src/controllers/profileController.js"],"names":["admin","FieldValue","firestore","ProfileController","db","logger","players","collection","req","res","validation","validate","query","listOneParams","error","checkIfPlayerExists","uid","player","status","send","createNewPlayer","swcToken","newPlayer","accessToken","getCharacterInfo","swcCharacter","doc","set","name","character","image","gender","race","value","created","serverTimestamp","createdAsUid","get","then","data","exists","catch","url","method","params","headers","response"],"mappings":"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","file":"profileController.js","sourcesContent":["//third party\r\nimport Joi from 'joi'\r\nimport axios from 'axios'\r\nimport * as admin from 'firebase-admin'\r\nconst FieldValue = admin.firestore.FieldValue\r\n\r\n//internal\r\nimport ProfileSchema from '../models/Profile.js'\r\n\r\nclass ProfileController {\r\n\r\n  constructor(db, logger) {\r\n    this.players = db.collection('players')\r\n    this.logger = logger\r\n  }\r\n\r\n  async listOne(req, res) {\r\n    const validation = Joi.validate(req.query, ProfileSchema.listOneParams)\r\n    if (validation.error === null) {\r\n      try {\r\n        const player = await this.checkIfPlayerExists(req.uid)\r\n        if (player) {\r\n          res.status(200).send(player)\r\n        } else {\r\n          //we need to create a new player\r\n          const newPlayer = await this.createNewPlayer(req.uid, req.swcToken)\r\n          if (newPlayer) {\r\n            res.status(201).send(newPlayer)\r\n          } else {\r\n            res.status(400).send('Error creating new player in database')\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.logger.error(error)\r\n        res.status(400).send(error)\r\n      }\r\n    } else {\r\n      this.logger.error('Joi validation error: ' + validation.error)\r\n      res.status(400).send(validation.error)\r\n    }\r\n  }\r\n\r\n  async createNewPlayer(uid, accessToken) {\r\n    try {\r\n      const swcCharacter = await this.getCharacterInfo(uid, accessToken)\r\n      await this.players.doc(uid).set({\r\n        name: swcCharacter.character.name,\r\n        image: swcCharacter.character.image,\r\n        gender: swcCharacter.character.gender,\r\n        race: swcCharacter.character.race.value,\r\n        created: FieldValue.serverTimestamp(),\r\n        createdAsUid: uid\r\n      })\r\n      return await this.players.doc(uid).get().then(doc => {\r\n        return doc.data()\r\n      })\r\n    } catch (error) {\r\n      this.logger.error(error)\r\n      return false\r\n    }\r\n  }\r\n\r\n  checkIfPlayerExists(uid) {\r\n    return this.players.doc(uid).get().then(doc => {\r\n      if (doc.exists) {\r\n        return doc.data()\r\n      } else {\r\n        return false\r\n      }\r\n    }).catch(error => {\r\n      this.logger.error(error)\r\n    })\r\n  }\r\n\r\n  getCharacterInfo(uid, accessToken) {\r\n    return axios({\r\n      url: `http://www.swcombine.com/ws/v1.0/character/${uid}/`,\r\n      method: 'GET',\r\n      params: {\r\n        'access_token': accessToken\r\n      },\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      return response.data\r\n    }).catch(error => {\r\n      this.logger.error('Error calling character info at SWC')\r\n      this.logger.error(error)\r\n      return error\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport default ProfileController\r\n"]}