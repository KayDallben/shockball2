{"version":3,"sources":["../../src/controllers/profileController.js"],"names":["admin","util","FieldValue","firestore","chance","ProfileController","db","logger","players","collection","teams","contracts","accounts","events","playerCaps","req","res","validation","validate","query","listOneParams","error","checkIfPlayerExists","uid","player","status","send","createNewPlayer","swcToken","newPlayer","decoratePlayer","accessToken","baseStats","rollBaseStats","playerValue","calculatePlayerValue","getCharacterInfo","swcCharacter","playerEntity","name","character","image","gender","race","value","created","serverTimestamp","swcPlayerUid","passing","throwing","blocking","toughness","morale","vision","leadership","aggression","endurance","energy","marketValue","rating","playerRating","add","doc","id","update","shockballPlayerUid","createPlayerStatCaps","createPlayerAccount","get","then","data","integer","min","max","playerId","set","lastModified","totalBalance","activityType","timestamp","amount","playerWithStatCaps","playerData","teamData","contractData","teamUid","length","doc2","contractUid","doc3","where","snapshot","forEach","doc4","push","records","generateSummaryRecords","season","matches","goals","shots","passes","blocksPass","blocksShot","tackles","runsBall","goalAverage","decoratedPlayer","url","method","params","headers","response","catch"],"mappings":"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","file":"profileController.js","sourcesContent":["//third party\r\nimport Joi from 'joi'\r\nimport axios from 'axios'\r\nimport * as admin from 'firebase-admin'\r\nimport Chance from 'chance'\r\n\r\n//internal\r\nimport ProfileSchema from '../models/Profile.js'\r\nimport * as util from '../lib/util.js'\r\n\r\nconst FieldValue = admin.firestore.FieldValue\r\nconst chance = new Chance()\r\n\r\nclass ProfileController {\r\n\r\n  constructor(db, logger) {\r\n    this.players = db.collection('players')\r\n    this.teams = db.collection('teams')\r\n    this.contracts = db.collection('contracts')\r\n    this.accounts = db.collection('accounts')\r\n    this.events = db.collection('events')\r\n    this.playerCaps = db.collection('playerCaps')\r\n    this.logger = logger\r\n  }\r\n\r\n  async listOne(req, res) {\r\n    const validation = Joi.validate(req.query, ProfileSchema.listOneParams)\r\n    if (validation.error === null) {\r\n      try {\r\n        const player = await this.checkIfPlayerExists(req.uid)\r\n        if (player) {\r\n          res.status(200).send(player)\r\n        } else {\r\n          //we need to create a new player\r\n          const newPlayer = await this.createNewPlayer(req.uid, req.swcToken)\r\n          await this.decoratePlayer(newPlayer)\r\n          if (newPlayer) {\r\n            res.status(201).send(newPlayer)\r\n          } else {\r\n            res.status(400).send('Error creating new player in database')\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.logger.error(error)\r\n        res.status(400).send(error)\r\n      }\r\n    } else {\r\n      this.logger.error('Joi validation error: ' + validation.error)\r\n      res.status(400).send(validation.error)\r\n    }\r\n  }\r\n\r\n  async createNewPlayer(uid, accessToken) {\r\n    try {\r\n      const baseStats = this.rollBaseStats()\r\n      const playerValue = util.calculatePlayerValue(baseStats)\r\n      const swcCharacter = await this.getCharacterInfo(uid, accessToken)\r\n      const playerEntity = {\r\n        name: swcCharacter.character.name,\r\n        image: swcCharacter.character.image,\r\n        gender: swcCharacter.character.gender,\r\n        race: swcCharacter.character.race.value,\r\n        created: FieldValue.serverTimestamp(),\r\n        swcPlayerUid: uid,\r\n        passing: baseStats.passing,\r\n        throwing: baseStats.throwing,\r\n        blocking: baseStats.blocking,\r\n        toughness: baseStats.toughness,\r\n        morale: baseStats.morale,\r\n        vision: baseStats.vision,\r\n        leadership: baseStats.leadership,\r\n        aggression: baseStats.aggression,\r\n        endurance: baseStats.endurance,\r\n        energy: baseStats.energy,\r\n        marketValue: playerValue.marketValue,\r\n        rating: playerValue.playerRating\r\n      }\r\n      const newPlayer = await this.players.add(playerEntity)\r\n      await this.players.doc(newPlayer.id).update({\r\n        shockballPlayerUid: newPlayer.id\r\n      })\r\n      await this.createPlayerStatCaps(newPlayer.id)\r\n      await this.createPlayerAccount(newPlayer.id, playerEntity)\r\n      return await this.players.doc(newPlayer.id).get().then(doc => {\r\n        return doc.data()\r\n      })\r\n    } catch (error) {\r\n      this.logger.error(error)\r\n      return false\r\n    }\r\n  }\r\n\r\n  rollBaseStats() {\r\n    const baseStats = {\r\n      passing: chance.integer({min:40, max:60}),\r\n      throwing: chance.integer({min:40, max:60}),\r\n      blocking: chance.integer({min:40, max:60}),\r\n      toughness: chance.integer({min:40, max:60}),\r\n      endurance: chance.integer({min:40, max:60}),\r\n      vision: chance.integer({min:40, max:60}),\r\n      morale: chance.integer({min:70, max:100}),\r\n      leadership: chance.integer({min:10, max:80}),\r\n      aggression: 0,\r\n      energy: chance.integer({min:70, max:100})\r\n    }\r\n    return baseStats\r\n  }\r\n\r\n  async createPlayerAccount(playerId, player) {\r\n    await this.accounts.doc(playerId).set({\r\n      shockballPlayerUid: playerId,\r\n      name: player.name,\r\n      created: FieldValue.serverTimestamp(),\r\n      lastModified: FieldValue.serverTimestamp(),\r\n      totalBalance: 0\r\n    })\r\n    await this.accounts.doc(playerId).collection('transactions').add({\r\n      activityType: 'Player account created for ' + player.name,\r\n      timestamp: FieldValue.serverTimestamp(),\r\n      amount: 0\r\n    })\r\n  }\r\n\r\n  async createPlayerStatCaps(uid) {\r\n    const playerWithStatCaps = {\r\n      shockballPlayerUid: uid,\r\n      created: FieldValue.serverTimestamp(),\r\n      passing: chance.integer({min:75, max:100}),\r\n      throwing: chance.integer({min:75, max:100}),\r\n      blocking: chance.integer({min:75, max:100}),\r\n      toughness: chance.integer({min:75, max:100}),\r\n      endurance: chance.integer({min:75, max:100}),\r\n      vision: chance.integer({min:75, max:100})\r\n    }\r\n    return await this.playerCaps.doc(uid).set(playerWithStatCaps)\r\n  }\r\n\r\n  async decoratePlayer(player) {\r\n    let playerData = player\r\n    playerData.teamData = {}\r\n    playerData.contractData = {}\r\n    if (playerData.teamUid && playerData.teamUid.length > 0) {\r\n      await this.teams.doc(playerData.teamUid).get().then((doc2) => {\r\n        playerData.teamData = doc2.data()\r\n      })\r\n    }\r\n    if (playerData.contractUid && playerData.contractUid.length > 0) {\r\n      await this.contracts.doc(playerData.contractUid).get().then((doc3) => {\r\n        playerData.contractData = doc3.data()\r\n      })\r\n    }\r\n    try {\r\n      if (!playerData.shockballPlayerUid) {\r\n        playerData.shockballPlayerUid = '1'\r\n      }\r\n      await this.events.where('actorUid', '==', playerData.shockballPlayerUid).get().then((snapshot) => {\r\n        let events = []\r\n        snapshot.forEach((doc4) => {\r\n          events.push(doc4.data())\r\n        })\r\n        if (events.length > 0) {\r\n          playerData.records = util.generateSummaryRecords(events)\r\n        } else {\r\n          playerData.records = [{\r\n            season: '1',\r\n            matches: 0,\r\n            goals: 0,\r\n            shots: 0,\r\n            passes: 0,\r\n            blocksPass: 0,\r\n            blocksShot: 0,\r\n            tackles: 0,\r\n            runsBall: 0,\r\n            goalAverage: 0\r\n          }]\r\n        }\r\n      })\r\n    } catch (error) {\r\n      this.logger.error(error)\r\n    }\r\n    return playerData\r\n  }\r\n\r\n  checkIfPlayerExists(swcPlayerUid) {\r\n    // important: here we are taking the swcUser uid to find the player - so this is a query to players collection\r\n    return this.players.where('swcPlayerUid', '==', swcPlayerUid).get().then(async (snapshot) => {\r\n      let players = []\r\n      snapshot.forEach((doc) => {\r\n        players.push(doc.data())\r\n      })\r\n      if (players.length > 0) {\r\n        const player = players[0] // Should only ever be a single user, but this takes the first if there happens to be more than one?\r\n        try {\r\n          const decoratedPlayer = await this.decoratePlayer(player)\r\n          return decoratedPlayer\r\n        } catch(error) {\r\n          this.logger.error(error)\r\n          return false\r\n        }\r\n      } else {\r\n        this.logger.error('checkIfPlayerExists did not find a matching player')\r\n        return false\r\n      }\r\n    })\r\n  }\r\n\r\n  getCharacterInfo(uid, accessToken) {\r\n    return axios({\r\n      url: `http://www.swcombine.com/ws/v1.0/character/${uid}/`,\r\n      method: 'GET',\r\n      params: {\r\n        'access_token': accessToken\r\n      },\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      return response.data\r\n    }).catch(error => {\r\n      this.logger.error('Error calling character info at SWC')\r\n      this.logger.error(error)\r\n      return error\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport default ProfileController\r\n"]}