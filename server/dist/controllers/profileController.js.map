{"version":3,"sources":["../../src/controllers/profileController.js"],"names":["admin","util","FieldValue","firestore","chance","ProfileController","db","logger","players","collection","teams","contracts","events","playerCaps","req","res","validation","validate","query","listOneParams","error","checkIfPlayerExists","uid","player","status","send","createNewPlayer","swcToken","newPlayer","accessToken","baseStats","rollBaseStats","playerValue","calculatePlayerValue","createPlayerStatCaps","getCharacterInfo","swcCharacter","doc","set","name","character","image","gender","race","value","created","serverTimestamp","createdAsUid","passing","throwing","blocking","toughness","morale","vision","leadership","aggression","endurance","fatigue","marketValue","rating","playerRating","get","then","data","integer","min","max","playerWithStatCaps","exists","playerData","teamData","contractData","teamUid","length","doc2","contractUid","doc3","where","snapshot","forEach","doc4","push","records","generateSummaryRecords","season","matches","goals","shots","passes","blocksPass","blocksShot","tackles","runsBall","goalAverage","catch","url","method","params","headers","response"],"mappings":"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","file":"profileController.js","sourcesContent":["//third party\r\nimport Joi from 'joi'\r\nimport axios from 'axios'\r\nimport * as admin from 'firebase-admin'\r\nimport Chance from 'chance'\r\n\r\n//internal\r\nimport ProfileSchema from '../models/Profile.js'\r\nimport * as util from '../lib/util.js'\r\n\r\nconst FieldValue = admin.firestore.FieldValue\r\nconst chance = new Chance()\r\n\r\nclass ProfileController {\r\n\r\n  constructor(db, logger) {\r\n    this.players = db.collection('players')\r\n    this.teams = db.collection('teams')\r\n    this.contracts = db.collection('contracts')\r\n    this.events = db.collection('events')\r\n    this.playerCaps = db.collection('playerCaps')\r\n    this.logger = logger\r\n  }\r\n\r\n  async listOne(req, res) {\r\n    const validation = Joi.validate(req.query, ProfileSchema.listOneParams)\r\n    if (validation.error === null) {\r\n      try {\r\n        const player = await this.checkIfPlayerExists(req.uid)\r\n        if (player) {\r\n          res.status(200).send(player)\r\n        } else {\r\n          //we need to create a new player\r\n          const newPlayer = await this.createNewPlayer(req.uid, req.swcToken)\r\n          if (newPlayer) {\r\n            res.status(201).send(newPlayer)\r\n          } else {\r\n            res.status(400).send('Error creating new player in database')\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.logger.error(error)\r\n        res.status(400).send(error)\r\n      }\r\n    } else {\r\n      this.logger.error('Joi validation error: ' + validation.error)\r\n      res.status(400).send(validation.error)\r\n    }\r\n  }\r\n\r\n  async createNewPlayer(uid, accessToken) {\r\n    try {\r\n      const baseStats = this.rollBaseStats()\r\n      const playerValue = util.calculatePlayerValue(baseStats)\r\n      await this.createPlayerStatCaps(uid)\r\n      const swcCharacter = await this.getCharacterInfo(uid, accessToken)\r\n      await this.players.doc(uid).set({\r\n        name: swcCharacter.character.name,\r\n        image: swcCharacter.character.image,\r\n        gender: swcCharacter.character.gender,\r\n        race: swcCharacter.character.race.value,\r\n        created: FieldValue.serverTimestamp(),\r\n        createdAsUid: uid,\r\n        passing: baseStats.passing,\r\n        throwing: baseStats.throwing,\r\n        blocking: baseStats.blocking,\r\n        toughness: baseStats.toughness,\r\n        morale: baseStats.morale,\r\n        vision: baseStats.vision,\r\n        leadership: baseStats.leadership,\r\n        aggression: baseStats.aggression,\r\n        endurance: baseStats.endurance,\r\n        fatigue: baseStats.fatigue,\r\n        marketValue: playerValue.marketValue,\r\n        rating: playerValue.playerRating\r\n      })\r\n      return await this.players.doc(uid).get().then(doc => {\r\n        return doc.data()\r\n      })\r\n    } catch (error) {\r\n      this.logger.error(error)\r\n      return false\r\n    }\r\n  }\r\n\r\n  rollBaseStats() {\r\n    const baseStats = {\r\n      passing: chance.integer({min:40, max:60}),\r\n      throwing: chance.integer({min:40, max:60}),\r\n      blocking: chance.integer({min:40, max:60}),\r\n      toughness: chance.integer({min:40, max:60}),\r\n      endurance: chance.integer({min:40, max:60}),\r\n      vision: chance.integer({min:40, max:60}),\r\n      morale: chance.integer({min:70, max:100}),\r\n      leadership: chance.integer({min:10, max:80}),\r\n      aggression: 0,\r\n      fatigue: 0\r\n    }\r\n    return baseStats\r\n  }\r\n\r\n  async createPlayerStatCaps(uid) {\r\n    const playerWithStatCaps = {\r\n      createdAsUid: uid,\r\n      created: FieldValue.serverTimestamp(),\r\n      passing: chance.integer({min:75, max:100}),\r\n      throwing: chance.integer({min:75, max:100}),\r\n      blocking: chance.integer({min:75, max:100}),\r\n      toughness: chance.integer({min:75, max:100}),\r\n      endurance: chance.integer({min:75, max:100}),\r\n      vision: chance.integer({min:75, max:100})\r\n    }\r\n    return await this.playerCaps.doc(uid).set(playerWithStatCaps)\r\n  }\r\n\r\n  checkIfPlayerExists(uid) {\r\n    return this.players.doc(uid).get().then(async(doc) => {\r\n      if (doc.exists) {\r\n        let playerData = doc.data()\r\n        playerData.teamData = {}\r\n        playerData.contractData = {}\r\n        if (playerData.teamUid && playerData.teamUid.length > 0) {\r\n          await this.teams.doc(playerData.teamUid).get().then((doc2) => {\r\n            playerData.teamData = doc2.data()\r\n          })\r\n        }\r\n        if (playerData.contractUid && playerData.contractUid.length > 0) {\r\n          await this.contracts.doc(playerData.contractUid).get().then((doc3) => {\r\n            playerData.contractData = doc3.data()\r\n          })\r\n        }\r\n        await this.events.where('actorUid', '==', playerData.createdAsUid).get().then((snapshot) => {\r\n          let events = []\r\n          snapshot.forEach((doc4) => {\r\n            events.push(doc4.data())\r\n          })\r\n          if (events.length > 0) {\r\n            playerData.records = util.generateSummaryRecords(events)\r\n          } else {\r\n            playerData.records = [{\r\n              season: '1',\r\n              matches: 0,\r\n              goals: 0,\r\n              shots: 0,\r\n              passes: 0,\r\n              blocksPass: 0,\r\n              blocksShot: 0,\r\n              tackles: 0,\r\n              runsBall: 0,\r\n              goalAverage: 0\r\n            }]\r\n          }\r\n        })\r\n        return playerData\r\n      } else {\r\n        return false\r\n      }\r\n    }).catch(error => {\r\n      this.logger.error(error)\r\n    })\r\n  }\r\n\r\n  getCharacterInfo(uid, accessToken) {\r\n    return axios({\r\n      url: `http://www.swcombine.com/ws/v1.0/character/${uid}/`,\r\n      method: 'GET',\r\n      params: {\r\n        'access_token': accessToken\r\n      },\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      return response.data\r\n    }).catch(error => {\r\n      this.logger.error('Error calling character info at SWC')\r\n      this.logger.error(error)\r\n      return error\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport default ProfileController\r\n"]}