{"version":3,"sources":["../../src/routes/baseRoutes.js"],"names":["baseRoutes","db","logger","profileController","loginController","get","req","res","listOne"],"mappings":";;;;;;AACA;;AAIA;;;;AACA;;;;AACA;;;;;;AALA,IAAMA,aAAa,sBAAnB;;AAEA;AAJA;;kBASe,UAACC,EAAD,EAAKC,MAAL,EAAgB;AAC7B,MAAMC,oBAAoB,gCAAsBF,EAAtB,EAA0BC,MAA1B,CAA1B;AACA,MAAME,kBAAkB,8BAAoBF,MAApB,CAAxB;;AAEA;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAF,aAAWK,GAAX,CAAe,UAAf,uBAAsC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClDJ,sBAAkBK,OAAlB,CAA0BF,GAA1B,EAA+BC,GAA/B;AACD,GAFD;;AAIE;;;;;;;;;;;;;;;;;;;;;;;;;AAyBFP,aAAWK,GAAX,CAAe,QAAf,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrCH,oBAAgBI,OAAhB,CAAwBF,GAAxB,EAA6BC,GAA7B;AACD,GAFD;;AAIA,SAAOP,UAAP;AACD,C","file":"baseRoutes.js","sourcesContent":["//third party libraries\r\nimport { Router } from 'express'\r\nconst baseRoutes = Router()\r\n\r\n// Internal code/packages\r\nimport authCheck from '../lib/authCheck'\r\nimport ProfileController from '../controllers/profileController'\r\nimport LoginController from '../controllers/loginController'\r\n\r\nexport default (db, logger) => {\r\n  const profileController = new ProfileController(db, logger)\r\n  const loginController = new LoginController(logger)\r\n\r\n  /**\r\n   * @swagger\r\n   * definitions:\r\n   *   Profile:\r\n   *     properties:\r\n   *       access_token:\r\n   *         type: \"string\"\r\n   *   Login:\r\n   *     properties:\r\n   *       authorization_code:\r\n   *         type: \"string\"\r\n   */\r\n\r\n  /**\r\n   * @swagger\r\n   * /api/profile:\r\n   *   x-swagger-router-controller: ../controllers/profileController\r\n   *   get:\r\n   *     tags:\r\n   *       - Profile\r\n   *     description: Get the profile data for the current player. Returns a Player object. Creates a new Player if user is new.\r\n   *     operationId: listOne\r\n   *     produces:\r\n   *       - application/json\r\n   *     parameters:\r\n   *       - access_token: access token\r\n   *         description: SWC access token of the current user\r\n   *         in: query\r\n   *         name: access_token\r\n   *         required: true\r\n   *         schema:\r\n   *           $ref: '#/definitions/Profile'\r\n   *     responses:\r\n   *       200:\r\n   *         description: Success\r\n   *         schema:\r\n   *           $ref: \"#/definitions/Profile\"\r\n   */\r\n  baseRoutes.get('/profile', authCheck, (req, res) => {\r\n    profileController.listOne(req, res)\r\n  })\r\n\r\n    /**\r\n   * @swagger\r\n   * /api/login:\r\n   *   x-swagger-router-controller: ../controllers/loginController\r\n   *   get:\r\n   *     tags:\r\n   *       - Login\r\n   *     description: Login the user and get player access token from SWC api\r\n   *     operationId: listOne\r\n   *     produces:\r\n   *       - application/json\r\n   *     parameters:\r\n   *       - authorization_code: authorization code\r\n   *         description: SWC authorization code of the current user\r\n   *         in: query\r\n   *         name: authorization_code\r\n   *         required: true\r\n   *         schema:\r\n   *           $ref: '#/definitions/Login'\r\n   *     responses:\r\n   *       200:\r\n   *         description: Success\r\n   *         schema:\r\n   *           $ref: \"#/definitions/Login\"\r\n   */\r\n  baseRoutes.get('/login', (req, res) => {\r\n    loginController.listOne(req, res)\r\n  })\r\n\r\n  return baseRoutes\r\n}\r\n"]}