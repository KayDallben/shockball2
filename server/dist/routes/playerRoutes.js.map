{"version":3,"sources":["../../src/routes/playerRoutes.js"],"names":["playerRoutes","db","logger","playerController","get","req","res","list","listOne"],"mappings":";;;;;;AACA;;AAIA;;;;AACA;;;;;;AAJA,IAAMA,eAAe,sBAArB;;AAEA;AAJA;;kBAQe,UAACC,EAAD,EAAKC,MAAL,EAAgB;AAC7B,MAAMC,mBAAmB,+BAAqBF,EAArB,EAAyBC,MAAzB,CAAzB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BAF,eAAaI,GAAb,CAAiB,UAAjB,uBAAwC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpDH,qBAAiBI,IAAjB,CAAsBF,GAAtB,EAA2BC,GAA3B;AACD,GAFD;;AAIF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCEN,eAAaI,GAAb,CAAiB,cAAjB,uBAA4C,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxDH,qBAAiBK,OAAjB,CAAyBH,GAAzB,EAA8BC,GAA9B;AACD,GAFD;;AAIA,SAAON,YAAP;AACD,C","file":"playerRoutes.js","sourcesContent":["//third party libraries\r\nimport { Router } from 'express'\r\nconst playerRoutes = Router()\r\n\r\n// Internal code/packages\r\nimport authCheck from '../lib/authCheck'\r\nimport PlayerController from '../controllers/playerController'\r\n\r\nexport default (db, logger) => {\r\n  const playerController = new PlayerController(db, logger)\r\n\r\n  /**\r\n   * @swagger\r\n   * definitions:\r\n   *   Player:\r\n   *     properties:\r\n   *       created:\r\n   *         type: \"string\"\r\n   *       createdAsUid:\r\n   *         type: \"string\"\r\n   *       gender:\r\n   *         type: \"string\"\r\n   *       image:\r\n   *         type: \"string\"\r\n   *       name:\r\n   *         type: \"string\"\r\n   *       race:\r\n   *         type: string\"\r\n   *       passing:\r\n   *         type: \"number\"\r\n   *       blocking:\r\n   *         type: \"number\"\r\n   *       throwing:\r\n   *         type: \"number\"\r\n   *       tougness:\r\n   *         type: \"number\"\r\n   *       vision:\r\n   *         type: \"number\"\r\n   *       endurance:\r\n   *         type: \"number\"\r\n   *       leadership:\r\n   *         type: \"number\"\r\n   *       morale:\r\n   *         type: \"number\"\r\n   *       fatigue:\r\n   *         type: \"number\"\r\n   *       aggression:\r\n   *         type: \"number\"\r\n   */\r\n\r\n  /**\r\n   * @swagger\r\n   * /api/players:\r\n   *   x-swagger-router-controller: ../controllers/playerController\r\n   *   get:\r\n   *     tags:\r\n   *       - Players\r\n   *     description: Get a list of players\r\n   *     operationId: list\r\n   *     produces:\r\n   *       - application/json\r\n   *     parameters:\r\n   *       - access_token: access token\r\n   *         description: SWC access token of the current user\r\n   *         in: query\r\n   *         name: access_token\r\n   *         required: true\r\n   *         schema:\r\n   *           $ref: '#/definitions/Player'\r\n   *     responses:\r\n   *       200:\r\n   *         description: Success\r\n   *         schema:\r\n   *           $ref: \"#/definitions/Player\"\r\n   *       400:\r\n   *         description: Bad request\r\n   */\r\n  playerRoutes.get('/players', authCheck, (req, res) => {\r\n    playerController.list(req, res)\r\n  })\r\n\r\n/**\r\n * @swagger\r\n * /api/players/{id}:\r\n *   x-swagger-router-controller: ../controllers/playerController\r\n *   get:\r\n *     tags:\r\n *       - Players\r\n *     description: Get a single player by uid\r\n *     operationId: listOne\r\n *     produces:\r\n *       - application/json\r\n *     parameters:\r\n *       - uid: player uid\r\n *         description: UID of the player\r\n *         in: path\r\n *         name: uid\r\n *         required: true\r\n *         schema:\r\n *           $ref: '#/definitions/Player'\r\n *       - access_token: access token\r\n *         description: SWC access token of the current user\r\n *         in: query\r\n *         name: access_token\r\n *         required: true\r\n *         schema:\r\n *           $ref: '#/definitions/Profile'\r\n *     responses:\r\n *       200:\r\n *         description: Success\r\n *         schema:\r\n *           $ref: \"#/definitions/Player\"\r\n */\r\n  playerRoutes.get('/players/:id', authCheck, (req, res) => {\r\n    playerController.listOne(req, res)\r\n  })\r\n\r\n  return playerRoutes\r\n}"]}